version: "3.9"

services:
  admin-api:
    image: admin-api:1.0
    build:
      context: admin-api
    container_name: admin-api
    env_file:
      - .env
      - firebase.env
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - db
    links:
      - db
    command: [ "java", "-Xmx2048m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005", "-jar", "/admin-api.jar", "--server.port=8080" ]

  client-api:
    image: client-api:1.0
    build:
      context: client-api
    container_name: client-api
    env_file:
      - .env
      - firebase.env
    ports:
      - "8081:8081"
      - "5006:5006"
    depends_on:
      - db
    links:
      - db
    command: [ "java", "-Xmx2048m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006", "-jar", "/client-api.jar", "--server.port=8081" ]

  supplier-api:
    image: supplier-api:1.0
    build:
      context: supplier-api
    container_name: supplier-api
    env_file:
      - .env
      - firebase.env
    ports:
      - "8082:8082"
      - "5007:5007"
    depends_on:
      - db
    links:
      - db
    command: [ "java", "-Xmx2048m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007", "-jar", "/supplier-api.jar", "--server.port=8082" ]

  stream:
    image: stream:1.0
    build:
      context: stream
    container_name: stream
    env_file:
      - .env
      - firebase.env
    ports:
      - "8083:8083"
      - "5008:5008"
    depends_on:
      - db
    links:
      - db
    command: [ "java", "-Xmx2048m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008", "-jar", "/app.jar", "--server.port=8083" ]

  task-scheduler:
    image: task-scheduler:1.0
    build:
      context: task-scheduler
    container_name: task-scheduler
    env_file:
      - .env
      - firebase.env
    ports:
      - "8084:8084"
      - "5009:5009"
    depends_on:
      - db
    links:
      - db
    command: [ "java", "-Xmx2048m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009", "-jar", "/app.jar", "--server.port=8084" ]


  db:
    image: postgres:13.1
    container_name: db-backend
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
